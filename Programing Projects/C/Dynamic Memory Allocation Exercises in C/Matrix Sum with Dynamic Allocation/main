
/* RebelesAndrei_2521_lab11_nr.prob3
Write a C application that dynamically allocates memory for two matrices of size m rows and n columns. 
Create a function to calculate the sum of the two matrices and another function to display a matrix. Show the initial matrices and the resulting summed matrix.
--------------------------------------------------------------------------------------------------*/
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>



void AfisareMatrice(int** mat, int m, int n);
void SumaMatricilor(int** mat1, int** mat2, int** rezultat, int m, int n);

int main() {
	int m, n, i, j;
	int** mat1, ** mat2, ** rezultat;

	printf("Cate lini vor avea matricile: ");
	scanf("%d", &m);
	printf("\nCate coloane vor avea matricile: ");
	scanf("%d", &n);

	// Creare Matrice 1
	if ((mat1 = (int**)malloc(m * sizeof(int)))) {
		for (i = 0; i < m; i++) {
			mat1[i] = (int*)malloc(n * sizeof(int));
			if (mat1[i] == 0) {
				printf("\n Eroare de alocare !");
				return 0;
			}
		}
	}

	// Creare Matrice 2
	if ((mat2 = (int**)malloc(m * sizeof(int)))) {
		for (i = 0; i < m; i++) {
			mat2[i] = (int*)malloc(n * sizeof(int));
			if (mat2[i] == 0) {
				printf("\n Eroare de alocare !");
			}
		}
	}

	if ((rezultat = (int**)malloc(m * sizeof(int)))) {
		for (int i = 0; i < m; i++) {
			rezultat[i] = (int*)malloc(n * sizeof(int));
			if (mat1[i] == 0) {
				printf("\n Eroare de alocare !");
			}
		}
	}

	// Alocare elemente matrice 1
	printf("\n Introduceti elementele matrici 1\n");
	for (i = 0; i < m; i++) {
		printf("Linia %d : ", i + 1);
		for (j = 0; j < n; j++) {
			scanf("%d", &mat1[i][j]);
		}
	}
	// Creare Matrice 2 + alocare elemente
	printf("\n Introduceti elementele matrici 2\n");
	for (i = 0; i < m; i++) {
		printf("Linia %d : ", i + 1);
		for (j = 0; j < n; j++) {
			scanf("%d", &mat2[i][j]);
		}
	}

	// Afisare Matrici
	printf("\nMatricea 1 arata astfel:");
	AfisareMatrice(mat1, m, n);

	printf("\nMatricea 2 arata astfel:");
	AfisareMatrice(mat2, m, n);

	printf("\nSuma matricilor arata astfel:");
	SumaMatricilor(mat1, mat2, rezultat, m, n);
	
	AfisareMatrice(rezultat, m, n);

	// Dealocare
	if (mat1) {
		for (i = 0; i < m; i++)
			free(mat1[i]);
		free(mat1);
	}
	if (mat2) {
		for (i = 0; i < m; i++)
			free(mat2[i]);
		free(mat2);
	}
	if (rezultat) {
		for (i = 0; i < m; i++)
			free(rezultat[i]);
		free(rezultat);
	}
	return 0;
}

void AfisareMatrice(int** mat, int m, int n) {
	for (int i = 0; i < m; i++) {
		printf("\n\t");
		for (int j = 0; j < n; j++) {
			printf(" %d", mat[i][j]);
		}
	}
	printf("\n");
}

void SumaMatricilor(int** mat1, int** mat2, int** rezultat, int m, int n) {
	for (int i = 0; i < m; i++) {
		for (int j = 0; j < n; j++) {
			rezultat[i][j] = mat1[i][j] + mat2[i][j];
		}
	}
}
